<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <bean class="org.apache.commons.dbcp2.BasicDataSource" id="dataSource">
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://localhost:3306/rental_car?characterEncoding=utf8&amp;useSSL=false"/>
        <property name="username" value="root"/>
        <property name="password" value="123456"/>
        <!--        最大连接数-->
        <property name="maxTotal" value="30"/>
        <!--        最大空闲数-->
        <property name="maxIdle" value="10"/>
        <!--        初始化连接数-->
        <property name="initialSize" value="5"/>
    </bean>

    <!--    添加事物支持-->
    <bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"/>
    </bean>

    <!--    开启事物注解-->
    <tx:annotation-driven transaction-manager="txManager"/>

    <!--    配置MyBatis工厂，同时指定数据源，并与MyBatis完美整合-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <!--        configLocation的属性值为MyBatis的核心配置文件-->
        <property name="configLocation" value="classpath:com/mybatis/mybatis-config.xml"/>
    </bean>

    <!--    Mapper代理开发，使用Spring自动扫描MyBatis的接口并装配-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

<!--    <context:component-scan base-package="com.service" />-->
</beans>